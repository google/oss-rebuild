// Copyright 2025 Google LLC
// SPDX-License-Identifier: Apache-2.0

package cargolock

import (
	"testing"

	"github.com/google/go-cmp/cmp"
)

func TestParse(t *testing.T) {
	tests := []struct {
		name    string
		content string
		want    []Package
		wantErr bool
	}{
		{
			name:    "empty content",
			content: "",
			want:    nil,
		},
		{
			name: "single package",
			content: `# This file is automatically @generated by Cargo.
# It is not intended for manual editing.
version = 3

[[package]]
name = "serde"
version = "1.0.193"
source = "registry+https://github.com/rust-lang/crates.io-index"
checksum = "25dd9975e68d0cb5aa1120c288333fc98731bd1dd12f561e468ea4728c042b89"
`,
			want: []Package{
				{Name: "serde", Version: "1.0.193"},
			},
		},
		{
			name: "multiple packages",
			content: `# This file is automatically @generated by Cargo.
# It is not intended for manual editing.
version = 3

[[package]]
name = "serde"
version = "1.0.193"
source = "registry+https://github.com/rust-lang/crates.io-index"
checksum = "25dd9975e68d0cb5aa1120c288333fc98731bd1dd12f561e468ea4728c042b89"

[[package]]
name = "tokio"
version = "1.35.1"
source = "registry+https://github.com/rust-lang/crates.io-index"
checksum = "c89b4efa943cdcb42a541ed5fafe108b0a0be4c16e8fe0c57e2b5b7a46b002d"
`,
			want: []Package{
				{Name: "serde", Version: "1.0.193"},
				{Name: "tokio", Version: "1.35.1"},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := Parse(tt.content)
			if (err != nil) != tt.wantErr {
				t.Errorf("Parse() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if diff := cmp.Diff(tt.want, got); diff != "" {
				t.Errorf("Parse() mismatch (-want +got):\n%s", diff)
			}
		})
	}
}
